package re.legend.crowd_simulator.agents

import com.badlogic.gdx.backends.lwjgl.LwjglApplication
import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.Lifecycle
import io.sarl.core.DefaultContextInteractions
import re.legend.crowd_simulator.graphics.SimulationApplication

/** 
 * This agent is the environment, use Observer Pattern and link with LibGDX
 * The environment will spawn "agent spirit" for people, their body, and match them
 */
agent EnvironmentAgent {
	
	uses Logging, Lifecycle, DefaultContextInteractions, MapManager
	
	var application : SimulationApplication
	

	on Initialize {
		loggingName = "Environment"
		info("Hello, I am the environment and I am creating this world")
		
		var config = occurrence.parameters.get(0) as LwjglApplicationConfiguration

		// TODO TEST ADULT CREATION
		setSkill(new DefaultMapManager)
		var adultTest = createAdult
		spawnInContextWithID(typeof(AdultAgent), adultTest.getUuid, defaultContext)
		
		// Instantiates application
		this.application = new SimulationApplication()
		new LwjglApplication(this.application, config);
		
		// TODO Implement a real game loop
		emit(new GameLoopTest)
	}

	on GameLoopTest {
		randomMoveJohn
		this.application.update(getBodies);
		emit(new GameLoopTest)
	}

	on Destroy {
		// Event trigger when the agent is destroyed from the system.
		// You should put all the resource releasing statements in this block of code.
		info("The World was destroyed.")
	}

}

