package re.legend.crowd_simulator.agents.events

import com.badlogic.gdx.math.Vector2
import com.google.common.graph.MutableGraph
import java.util.List
import java.util.UUID
import re.legend.crowd_simulator.entities.bodies.AgentBody
import re.legend.crowd_simulator.entities.gameobjects.Shop
import re.legend.crowd_simulator.pathfinding.AStarNode

event SimulationStep

/** 
 * Perception sent to agents containing the perceiving body
 */
event Perception {
	val body : AgentBody
	val currentTime : float
	val shops : List<Shop>
	val waypoints : MutableGraph<AStarNode>

	new (b : AgentBody, time : float, waypoints : MutableGraph<AStarNode>, shops : List<Shop>) {
		this.body = b
		this.currentTime = time
		this.waypoints = waypoints
		this.shops = shops
	}
}

/**
 * Alarm is sent by the bomb when it is spawned
 * It triggers the evacuation of the agents in the mall
 */
event Alarm {
	//val position : Vector2
	val exits : List<Vector2>
	
	new (exits : List<Vector2>) {
		//this.position = position
		this.exits = exits
	}
}

/**
 * Event sent by an agent when it's leaving the mall
 * Used to notify the environment in order to delete the agent body
 */
event AgentLeftMall {
	val agentId : UUID
	
	new  (id : UUID) {
		this.agentId = id
	}
}

/**
 * Event triggered by the environment when a bomb has been planted
 * Stops the agent spawning to simulate the mall closing down
 */
event ForbidEntrance {}