package re.legend.crowd_simulator.agents.events

import java.util.List
import re.legend.crowd_simulator.entities.SimulationEntity
import re.legend.crowd_simulator.entities.bodies.AgentBody

// TODO Test purpose, game loop
event GameLoopTest

/** 
 * Perception sent to agents containing the perceiving body
 */
event Perception {
	val body : AgentBody
	val perceivedObjects : List<SimulationEntity>
	val perceivedBodies : List<AgentBody>

	new (b : AgentBody) {
		this.body = b;
		this.perceivedBodies = b.perceivedBodies;
		this.perceivedObjects = b.perceivedObjects;
	}
}

/**
 * Synchronize with the simulation time
 */
event SyncEvent {
	val currentTime : float
	val lastStepDuration : float
	
	new(ct : float, lsd : float)
	{
		this.currentTime = ct
		this.lastStepDuration = lsd
	}	
}

event AdultCreated extends SyncEvent {
	var x : float
	var y : float
	// frustrum
	new(ct : float, lsd : float) {
		super(ct, lsd)
		x = -1
		y = -1
	}
}

event SyncAdult extends SyncEvent {
	new (ct : float, lsd : float)
	{
		super(ct, lsd)
	}
}